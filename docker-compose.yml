# version: '3.3'

# services:
#   json-server:
#     build:
#       context: ./frontend
#       dockerfile: js.Dockerfile
#     tty: true
#     ports:
#       - 8185:8185
#     command: json-server -H 0.0.0.0 db.json -p8185

version: '3.3'

services:
  # MYSQL Databases
  db_rating:
    container_name: "18-db_rating"
    build:
      context: ./Database
      dockerfile: ratingDB.Dockerfile
    # image: 18-rating_db_image
    environment:
      MYSQL_TCP_PORT: 8183
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - 8183:3306
    volumes:
      - rating_data:/var/lib/mysql
    networks:
      - assignment2bridge
  # Comment database
  db_comment:
    container_name: "18-db_comment"
    build:
      context: ./Database
      dockerfile: commentDB.Dockerfile
    # image: 18-comment_db_image
    environment:
      MYSQL_TCP_PORT: 8184
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - 8184:3306
    volumes:
      - comment_data:/var/lib/mysql
    networks:
      - assignment2bridge

  # Frontend server
  frontend:
    container_name: 18-frontend_react
    depends_on:
      - ms_rating
      - ms_comment
      - db_rating
      - db_comment
      - json_server
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
    # image: 18-frontend_react_image
    ports:
      - 8180:3000
    stdin_open: true
    volumes:
      - node_modules:/app/node_modules
      # - ./frontend:/app
    networks:
      - assignment2bridge
  json_server:
    container_name: 18-json_server
    build:
      context: ./frontend
      dockerfile: js.Dockerfile
    ports:
      - 8185:8185
    networks:
      - assignment2bridge
    command: json-server -H 0.0.0.0 db.json -p8185

  # Rating Microservice
  ms_rating:
    depends_on:
      - db_rating
    build:
      context: ./Microservices/Rating
      dockerfile: rating.Dockerfile
    env_file:
      - ./Microservices/Rating/rating.env
    # image: 18-rating_ms_image
    container_name: 18-ms_rating
    ports:
      - 8181:8181
    networks:
      - assignment2bridge

  # Comment Microservice
  ms_comment:
    depends_on:
      - db_comment
    build:
      context: ./Microservices/Comment
      dockerfile: comment.Dockerfile
    env_file:
      - ./Microservices/Comment/comment.env
    # image: 18-comment_ms_image
    container_name: 18-ms_comment
    ports:
      - 8182:8182
    networks:
      - assignment2bridge

volumes:
  rating_data: null
  comment_data: null
  node_modules: null

networks:
  assignment2bridge:
    driver: bridge
