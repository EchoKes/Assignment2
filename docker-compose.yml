version: '3.3'

services:
  # MYSQL Databases
  db_rating:
    container_name: "18-db_rating"
    build:
      context: ./Database
      dockerfile: ratingDB.Dockerfile
    # image: 18-rating_db_image
    environment:
      MYSQL_TCP_PORT: 8183
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - 8183:3306
    # deploy:
    #   restart_policy:
    #     condition: on-failure
    volumes:
      - rating_data:/var/lib/mysql
    networks:
      - assignment2bridge
  # Comment database
  db_comment:
    container_name: "18-db_comment"
    build:
      context: ./Database
      dockerfile: commentDB.Dockerfile
    # image: 18-comment_db_image
    environment:
      MYSQL_TCP_PORT: 8184
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - 8184:3306
    # deploy:
    #   restart_policy:
    #     condition: on-failure
    volumes:
      - comment_data:/var/lib/mysql
    networks:
      - assignment2bridge

  # # Frontend server
  # frontend:
  #   container_name: 18-frontend_react
  #   depends_on:
  #     - ms_rating
  #     - ms_comment
  #     - db_rating
  #     - db_comment
  #   build:
  #     context: ./frontend
  #     dockerfile: frontend.Dockerfile
  #   # image: 18-frontend_react_image
  #   ports:
  #     - 8180:3000
  #   stdin_open: true
  #   volumes:
  #     - node_modules:/app/node_modules
  #     # - ./frontend:/app
  #   networks:
  #     - assignment2bridge
  #   # deploy:
  #   #   restart_policy:
  #   #     condition: on-failure

  # Rating Microservice
  ms_rating:
    depends_on:
      - db_rating
    build:
      context: ./Microservices/Rating
      dockerfile: rating.Dockerfile
    env_file:
      - ./Microservices/Rating/rating.env
    # environment:
    #   - BASE_RATINGS_API_STUDENT_URL=/ratings/student/{studentid}
    #   - BASE_RATINGS_API_TUTOR_URL=/ratings/tutor/{tutorid}
    #   - ALLSTUDENTS_API_URL=/students
    #   - ALLTUTORS_API_URL=/tutors
    # image: 18-rating_ms_image
    container_name: 18-ms_rating
    ports:
      - 8181:8181
    networks:
      - assignment2bridge

  # Comment Microservice
  ms_comment:
    depends_on:
      - db_comment
    build:
      context: ./Microservices/Comment
      dockerfile: comment.Dockerfile
    env_file:
      - ./Microservices/Comment/comment.env
    # environment:
    #   - BASE_COMMENTS_API_STUDENT_URL=/comments/student/{studentid}
    #   - BASE_COMMENTS_API_TUTOR_URL=/comments/tutor/{tutorid}
    #   - ALLSTUDENTS_API_URL=/students
    #   - ALLTUTORS_API_URL=/tutors
    # image: 18-comment_ms_image
    container_name: 18-ms_comment
    ports:
      - 8182:8182
    networks:
      - assignment2bridge

volumes:
  rating_data: null
  comment_data: null
  # node_modules: null

networks:
  assignment2bridge:
    driver: bridge

